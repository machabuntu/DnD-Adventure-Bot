#!/usr/bin/env python3
"""
Скрипт для очистки и обновления данных в таблицах оружия, происхождений и классов
"""

from database import get_db

def clear_and_update_data():
    """Очищает и обновляет данные в указанных таблицах"""
    db = get_db()
    
    if not db.connect():
        print("Ошибка подключения к базе данных")
        return False
    
    print("Очистка таблиц...")
    
    # Очищаем таблицы (в правильном порядке из-за внешних ключей)
    tables_to_clear = [
        "class_spell_slots",
        "character_equipment", 
        "character_spells",
        "weapons",
        "armor",
        "origins", 
        "classes",
        "races"
    ]
    
    for table in tables_to_clear:
        result = db.execute_query(f"DELETE FROM {table}")
        print(f"Очищена таблица {table}: удалено {result} строк")
    
    print("\nЗаполнение таблиц новыми данными...")
    
    # Заполняем таблицу origins
    origins_data = [
        ("Артист", '{"str": 0, "dex": 0, "cha": 0}', '["Акробатика", "Выступление"]', 5000),
        ("Благородный", '{"str": 0, "int": 0, "cha": 0}', '["История", "Убеждение"]', 5000),
        ("Моряк", '{"str": 0, "dex": 0, "wis": 0}', '["Акробатика", "Внимательность"]', 5000),
        ("Мудрец", '{"con": 0, "int": 0, "wis": 0}', '["Аркана", "История"]', 5000),
        ("Отшельник", '{"con": 0, "wis": 0, "cha": 0}', '["Медицина", "Религия"]', 5000),
        ("Преступник", '{"dex": 0, "int": 0, "cha": 0}', '["Обман", "Скрытность"]', 5000),
        ("Народный герой", '{"str": 0, "con": 0, "wis": 0}', '["Выживание", "Обращение с животными"]', 5000),
        ("Солдат", '{"str": 0, "con": 0, "cha": 0}', '["Атлетика", "Запугивание"]', 5000),
        ("Аколит", '{"int": 0, "wis": 0, "cha": 0}', '["Проницательность", "Религия"]', 5000),
        ("Алхимик", '{"con": 0, "int": 0, "wis": 0}', '["Аркана", "Медицина"]', 5000),
    ]
    
    for origin_data in origins_data:
        db.execute_query(
            "INSERT INTO origins (name, stat_bonuses, skills, starting_money) VALUES (%s, %s, %s, %s)",
            origin_data
        )
    print(f"Добавлено {len(origins_data)} происхождений")
    
    # Заполняем таблицу races
    races_data = [
        ("Человек",),
        ("Эльф",),
        ("Дварф",),
        ("Полурослик",),
        ("Драконорожденный",),
        ("Гном",),
        ("Полуэльф",),
        ("Полуорк",),
        ("Тифлинг",),
        ("Орк",),
        ("Аасимар",),
        ("Гоблин",),
        ("Голиаф",),
        ("Фирболг",),
        ("Табакси",)
    ]
    
    for race_data in races_data:
        db.execute_query(
            "INSERT INTO races (name) VALUES (%s)",
            race_data
        )
    print(f"Добавлено {len(races_data)} рас")
    
    # Заполняем таблицу weapons
    weapons_data = [
        # Простое рукопашное оружие
        ("Простое", "Дубинка", "1d4", "дробящий", '["Лёгкое"]', "одноручное", 2.0, 10, "Нет"),
        ("Простое", "Кинжал", "1d4", "колющий", '["Фехтовальное", "Лёгкое", "Метательное"]', "одноручное", 1.0, 200, "Бросок"),
        ("Простое", "Палица", "1d8", "дробящий", '["Двуручное"]', "двуручное", 10.0, 20, "Удар"),
        ("Простое", "Ручной топор", "1d6", "рубящий", '["Лёгкое", "Метательное"]', "одноручное", 2.0, 500, "Размах"),
        ("Простое", "Метательное копьё", "1d6", "колющий", '["Метательное"]', "одноручное", 2.0, 50, "Метнуть"),
        ("Простое", "Лёгкий молот", "1d4", "дробящий", '["Лёгкое", "Метательное"]', "одноручное", 2.0, 200, "Бросок"),
        ("Простое", "Булава", "1d6", "дробящий", '[]', "одноручное", 4.0, 500, "Удар"),
        ("Простое", "Боевой посох", "1d6", "дробящий", '["Универсальное (1d8)"]', "одноручное", 4.0, 20, "Удар"),
        ("Простое", "Серп", "1d4", "рубящий", '["Лёгкое"]', "одноручное", 2.0, 100, "Кривой удар"),
        ("Простое", "Копьё", "1d6", "колющий", '["Метательное", "Универсальное (1d8)"]', "одноручное", 3.0, 100, "Тычок"),
        
        # Простое дальнобойное оружие
        ("Простое", "Дротик", "1d4", "колющий", '["Фехтовальное", "Метательное"]', "одноручное", 0.25, 5, "Бросок"),
        ("Простое", "Лёгкий арбалет", "1d8", "колющий", '["Боеприпасы", "Перезарядка", "Двуручное"]', "двуручное", 5.0, 2500, "Выстрел"),
        ("Простое", "Короткий лук", "1d6", "колющий", '["Боеприпасы", "Двуручное"]', "двуручное", 2.0, 2500, "Выстрел"),
        ("Простое", "Праща", "1d4", "дробящий", '["Боеприпасы"]', "одноручное", 0.0, 10, "Бросок"),
        
        # Воинское рукопашное оружие
        ("Воинское", "Боевой топор", "1d8", "рубящий", '["Универсальное (1d10)"]', "одноручное", 4.0, 1000, "Размах"),
        ("Воинское", "Цеп", "1d8", "дробящий", '[]', "одноручное", 2.0, 1000, "Размах"),
        ("Воинское", "Глефа", "1d10", "рубящий", '["Тяжёлое", "Досягаемость", "Двуручное"]', "двуручное", 6.0, 2000, "Размах"),
        ("Воинское", "Секира", "1d12", "рубящий", '["Тяжёлое", "Двуручное"]', "двуручное", 7.0, 3000, "Размах"),
        ("Воинское", "Двуручный меч", "2d6", "рубящий", '["Тяжёлое", "Двуручное"]', "двуручное", 6.0, 5000, "Размах"),
        ("Воинское", "Алебарда", "1d10", "рубящий", '["Тяжёлое", "Досягаемость", "Двуручное"]', "двуручное", 6.0, 2000, "Размах"),
        ("Воинское", "Длинное копьё", "1d10", "колющий", '["Тяжёлое", "Досягаемость", "Двуручное"]', "двуручное", 6.0, 1000, "Тычок"),
        ("Воинское", "Длинный меч", "1d8", "рубящий", '["Универсальное (1d10)"]', "одноручное", 3.0, 1500, "Размах"),
        ("Воинское", "Молот", "1d8", "дробящий", '["Универсальное (1d10)"]', "одноручное", 2.0, 1500, "Удар"),
        ("Воинское", "Моргенштерн", "1d8", "колющий", '[]', "одноручное", 4.0, 1500, "Тычок"),
        ("Воинское", "Пика", "1d10", "колющий", '["Тяжёлое", "Досягаемость", "Двуручное"]', "двуручное", 18.0, 500, "Тычок"),
        ("Воинское", "Рапира", "1d8", "колющий", '["Фехтовальное"]', "одноручное", 2.0, 2500, "Тычок"),
        ("Воинское", "Скимитар", "1d6", "рубящий", '["Фехтовальное", "Лёгкое"]', "одноручное", 3.0, 2500, "Размах"),
        ("Воинское", "Короткий меч", "1d6", "колющий", '["Фехтовальное", "Лёгкое"]', "одноручное", 2.0, 1000, "Тычок"),
        ("Воинское", "Трезубец", "1d8", "колющий", '["Метательное", "Универсальное (1d10)"]', "одноручное", 4.0, 500, "Тычок"),
        ("Воинское", "Боевая кирка", "1d8", "колющий", '["Универсальное (1d10)"]', "одноручное", 2.0, 500, "Тычок"),
        ("Воинское", "Кнут", "1d4", "рубящий", '["Фехтовальное", "Досягаемость"]', "одноручное", 3.0, 200, "Хлестнуть"),
        
        # Воинское дальнобойное оружие
        ("Воинское", "Духовая трубка", "1", "колющий", '["Боеприпасы", "Лёгкое"]', "одноручное", 1.0, 1000, "Выстрел"),
        ("Воинское", "Ручной арбалет", "1d6", "колющий", '["Боеприпасы", "Лёгкое", "Лёгкое"]', "одноручное", 3.0, 7500, "Выстрел"),
        ("Воинское", "Тяжёлый арбалет", "1d10", "колющий", '["Боеприпасы", "Тяжёлое", "Перезарядка", "Двуручное"]', "двуручное", 18.0, 5000, "Выстрел"),
        ("Воинское", "Длинный лук", "1d8", "колющий", '["Боеприпасы", "Тяжёлое", "Двуручное"]', "двуручное", 2.0, 5000, "Выстрел"),
        ("Воинское", "Сеть", "0", "нет", '["Специальное", "Метательное"]', "одноручное", 3.0, 200, "Накинуть")
    ]
    
    for weapon in weapons_data:
        db.execute_query(
            "INSERT INTO weapons (weapon_type, name, damage, damage_type, properties, grip_type, weight, price, technique) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)",
            weapon
        )
    print(f"Добавлено {len(weapons_data)} видов оружия")
    
    # Заполняем таблицу armor - корректные данные из PDF
    armor_data = [
        # Легкие доспехи
        ("Стёганый доспех", "11 + Лов", 0, 8.0, 500, "легкий"),     # 5 зм = 500 монет
        ("Кожаный доспех", "11 + Лов", 0, 10.0, 1000, "легкий"),    # 10 зм = 1000 монет
        ("Проклёпанная кожа", "12 + Лов", 0, 13.0, 4500, "легкий"), # 45 зм = 4500 монет
        
        # Средние доспехи
        ("Шкурный доспех", "12 + Лов (макс 2)", 0, 12.0, 1000, "средний"),    # 10 зм = 1000 монет
        ("Кольчужная рубаха", "13 + Лов (макс 2)", 0, 20.0, 5000, "средний"), # 50 зм = 5000 монет
        ("Чешуйчатый доспех", "14 + Лов (макс 2)", 0, 45.0, 5000, "средний"), # 50 зм = 5000 монет
        ("Кираса", "14 + Лов (макс 2)", 0, 20.0, 40000, "средний"),            # 400 зм = 40000 монет
        ("Полулаты", "15 + Лов (макс 2)", 0, 40.0, 75000, "средний"),          # 750 зм = 75000 монет
        
        # Тяжелые доспехи
        ("Кольчатый доспех", "14", 0, 40.0, 3000, "тяжелый"),   # 30 зм = 3000 монет
        ("Кольчуга", "16", 13, 55.0, 7500, "тяжелый"),          # 75 зм = 7500 монет
        ("Наборный доспех", "17", 15, 60.0, 20000, "тяжелый"),  # 200 зм = 20000 монет
        ("Латы", "18", 15, 65.0, 150000, "тяжелый"),            # 1500 зм = 150000 монет
        
        # Щит
        ("Щит", "+2", 0, 6.0, 1000, "щит")                      # 10 зм = 1000 монет
    ]
    
    for armor in armor_data:
        db.execute_query(
            "INSERT INTO armor (name, armor_class, strength_requirement, weight, price, armor_type) VALUES (%s, %s, %s, %s, %s, %s)",
            armor
        )
    print(f"Добавлено {len(armor_data)} доспехов")
    
    # Заполняем таблицу classes 
    classes_data = [
        ("Варвар", "Сила", 12, '["простое", "воинское"]', '["легкие", "средние", "щиты"]', '["Уход за животными", "Атлетика", "Природа", "Запугивание", "Внимательность", "Выживание"]', 2, 7500, False),
("Бард", "Харизма", 8, '["простое"]', '["легкие"]', '["Атлетика", "Акробатика", "Анализ", "Аркана", "Внимание", "Выживание", "Выступление", "Запугивание", "История", "Ловкость Рук", "Обман", "Медицина", "Природа", "Проницательность", "Религия", "Скрытность", "Убеждение", "Уход за животными"]', 3, 7500, True),
        ("Жрец", "Мудрость", 8, '["простое"]', '["легкие", "средние", "щиты"]', '["История", "Проницательность", "Медицина", "Убеждение", "Религия"]', 2, 11000, True),
        ("Друид", "Мудрость", 8, '["простое"]', '["легкие", "щиты"]', '["Аркана", "Уход за животными", "Проницательность", "Медицина", "Природа", "Внимательность", "Религия", "Выживание"]', 2, 5000, True),
        ("Воин", "Сила", 10, '["простое", "воинское"]', '["все", "щиты"]', '["Акробатика", "Атлетика", "Внимательность", "Выживание", "Запугивание", "История", "Проницательность", "Убеждение", "Уход за животными"]', 2, 15500, False),
        ("Монах", "Ловкость", 8, '["простое", "короткие мечи"]', '[]', '["Акробатика", "Атлетика", "История", "Проницательность", "Религия", "Скрытность"]', 2, 5000, False),
        ("Паладин", "Сила", 10, '["простое", "воинское"]', '["все", "щиты"]', '["Атлетика", "Проницательность", "Запугивание", "Медицина", "Убеждение", "Религия"]', 2, 15000, True),
        ("Следопыт", "Ловкость", 10, '["простое", "воинское"]', '["легкие", "средние", "щиты"]', '["Уход за животными", "Атлетика", "Проницательность", "Анализ", "Природа", "Внимательность", "Скрытность", "Выживание"]', 3, 15000, True),
        ("Плут", "Ловкость", 8, '["простое", "воинское со свойством фехтовальное или легкое"]', '["легкие"]', '["Акробатика", "Атлетика", "Обман", "Проницательность", "Запугивание", "Анализ", "Внимательность", "Убеждение", "Ловкость рук", "Скрытность"]', 4, 10000, False),
        ("Чародей", "Харизма", 6, '["простое"]', '[]', '["Аркана", "Обман", "Проницательность", "Запугивание", "Убеждение", "Религия"]', 2, 5000, True),
        ("Колдун", "Харизма", 8, '["простое"]', '["легкие"]', '["Аркана", "Обман", "История", "Запугивание", "Анализ", "Природа", "Религия"]', 2, 10000, True),
        ("Волшебник", "Интеллект", 6, '["простое"]', '[]', '["Аркана", "История", "Проницательность", "Анализ", "Медицина", "Религия"]', 2, 5500, True)
    ]
    
    for class_data in classes_data:
        db.execute_query(
            "INSERT INTO classes (name, primary_stat, hit_die, weapon_proficiency, armor_proficiency, skills_available, skills_count, starting_money, is_spellcaster) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)",
            class_data
        )
    print(f"Добавлено {len(classes_data)} классов")
    
    # Заполняем данные о слотах заклинаний
    classes = db.execute_query("SELECT id, name FROM classes WHERE is_spellcaster = TRUE")
    
    spell_slots_data = {
        "Бард": [
            (1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 4),
            (2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 5),
            (3, 4, 2, 0, 0, 0, 0, 0, 0, 0, 6),
            (4, 4, 3, 0, 0, 0, 0, 0, 0, 0, 7),
            (5, 4, 3, 2, 0, 0, 0, 0, 0, 0, 8)
        ],
        "Жрец": [
            (1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2),
            (2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3),
            (3, 4, 2, 0, 0, 0, 0, 0, 0, 0, 4),
            (4, 4, 3, 0, 0, 0, 0, 0, 0, 0, 5),
            (5, 4, 3, 2, 0, 0, 0, 0, 0, 0, 6)
        ],
        "Друид": [
            (1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2),
            (2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3),
            (3, 4, 2, 0, 0, 0, 0, 0, 0, 0, 4),
            (4, 4, 3, 0, 0, 0, 0, 0, 0, 0, 5),
            (5, 4, 3, 2, 0, 0, 0, 0, 0, 0, 6)
        ],
        "Паладин": [
            (1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
            (2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2),
            (3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3),
            (4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 4),
            (5, 4, 2, 0, 0, 0, 0, 0, 0, 0, 5)
        ],
        "Следопыт": [
            (1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
            (2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2),
            (3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3),
            (4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 4),
            (5, 4, 2, 0, 0, 0, 0, 0, 0, 0, 5)
        ],
        "Чародей": [
            (1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2),
            (2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3),
            (3, 4, 2, 0, 0, 0, 0, 0, 0, 0, 4),
            (4, 4, 3, 0, 0, 0, 0, 0, 0, 0, 5),
            (5, 4, 3, 2, 0, 0, 0, 0, 0, 0, 6)
        ],
        "Колдун": [
            (1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2),
            (2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3),
            (3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 4),
            (4, 0, 2, 0, 0, 0, 0, 0, 0, 0, 5),
            (5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 6)
        ],
        "Волшебник": [
            (1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 6),
            (2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 8),
            (3, 4, 2, 0, 0, 0, 0, 0, 0, 0, 10),
            (4, 4, 3, 0, 0, 0, 0, 0, 0, 0, 12),
            (5, 4, 3, 2, 0, 0, 0, 0, 0, 0, 14)
        ]
    }
    
    spell_slots_count = 0
    for class_data in classes:
        class_id = class_data['id']
        class_name = class_data['name']
        
        if class_name in spell_slots_data:
            for level_data in spell_slots_data[class_name]:
                level, slot1, slot2, slot3, slot4, slot5, slot6, slot7, slot8, slot9, known = level_data
                
                db.execute_query(
                    """INSERT INTO class_spell_slots 
                    (class_id, level, slot_level_1, slot_level_2, slot_level_3, slot_level_4, slot_level_5, 
                     slot_level_6, slot_level_7, slot_level_8, slot_level_9, known_spells) 
                    VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)""",
                    (class_id, level, slot1, slot2, slot3, slot4, slot5, slot6, slot7, slot8, slot9, known)
                )
                spell_slots_count += 1
    
    print(f"Добавлено {spell_slots_count} записей о слотах заклинаний")
    
    db.disconnect()
    print("\nОбновление данных завершено успешно!")
    return True

if __name__ == "__main__":
    clear_and_update_data()
