#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π
"""

import mysql.connector
from config import DB_HOST, DB_PORT, DB_USER, DB_PASSWORD, DB_NAME

def test_spellcasting_ability():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"""
    conn = mysql.connector.connect(
        host=DB_HOST,
        port=DB_PORT,
        user=DB_USER,
        password=DB_PASSWORD,
        database=DB_NAME
    )
    cursor = conn.cursor(dictionary=True)
    
    print("=" * 60)
    print("–¢–ï–°–¢: –ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–ª–∞—Å—Å–æ–≤")
    print("=" * 60)
    
    cursor.execute("""
        SELECT name, is_spellcaster, spellcasting_ability 
        FROM classes 
        ORDER BY name
    """)
    
    for row in cursor.fetchall():
        if row['is_spellcaster']:
            print(f"‚úÖ {row['name']:12} - –ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: {row['spellcasting_ability']}")
        else:
            print(f"   {row['name']:12} - –ù–µ –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å")
    
    cursor.close()
    conn.close()

def test_spell_saving_throws():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è —Å —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏"""
    conn = mysql.connector.connect(
        host=DB_HOST,
        port=DB_PORT,
        user=DB_USER,
        password=DB_PASSWORD,
        database=DB_NAME
    )
    cursor = conn.cursor(dictionary=True)
    
    print("\n" + "=" * 60)
    print("–¢–ï–°–¢: –ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è —Å —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏")
    print("=" * 60)
    
    cursor.execute("""
        SELECT name, level, damage, saving_throw, is_area_of_effect
        FROM spells
        WHERE saving_throw IS NOT NULL AND is_combat = TRUE
        ORDER BY level, name
        LIMIT 10
    """)
    
    for spell in cursor.fetchall():
        aoe = " [AoE]" if spell['is_area_of_effect'] else ""
        print(f"–£—Ä–æ–≤–µ–Ω—å {spell['level']}: {spell['name']}{aoe}")
        print(f"  –£—Ä–æ–Ω: {spell['damage'] or '–Ω–µ—Ç'}")
        print(f"  –°–ø–∞—Å–±—Ä–æ—Å–æ–∫: {spell['saving_throw']}")
        print()
    
    cursor.close()
    conn.close()

def test_attack_spells():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è, —Ç—Ä–µ–±—É—é—â–∏–µ –±—Ä–æ—Å–∫–∞ –∞—Ç–∞–∫–∏"""
    conn = mysql.connector.connect(
        host=DB_HOST,
        port=DB_PORT,
        user=DB_USER,
        password=DB_PASSWORD,
        database=DB_NAME
    )
    cursor = conn.cursor(dictionary=True)
    
    print("=" * 60)
    print("–¢–ï–°–¢: –ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è —Å –±—Ä–æ—Å–∫–æ–º –∞—Ç–∞–∫–∏ (–±–µ–∑ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞)")
    print("=" * 60)
    
    cursor.execute("""
        SELECT name, level, damage, damage_type
        FROM spells
        WHERE saving_throw IS NULL 
        AND damage IS NOT NULL 
        AND is_combat = TRUE
        AND is_area_of_effect = FALSE
        ORDER BY level, name
        LIMIT 10
    """)
    
    for spell in cursor.fetchall():
        print(f"–£—Ä–æ–≤–µ–Ω—å {spell['level']}: {spell['name']}")
        print(f"  –£—Ä–æ–Ω: {spell['damage']} {spell['damage_type']}")
        print(f"  –¢—Ä–µ–±—É–µ—Ç –±—Ä–æ—Å–∫–∞ –∞—Ç–∞–∫–∏ –ø—Ä–æ—Ç–∏–≤ AC —Ü–µ–ª–∏")
        print()
    
    cursor.close()
    conn.close()

def main():
    print("\nüßô –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–õ–£–ß–®–ï–ù–ò–ô –°–ò–°–¢–ï–ú–´ –ó–ê–ö–õ–ò–ù–ê–ù–ò–ô üßô\n")
    
    test_spellcasting_ability()
    test_spell_saving_throws()
    test_attack_spells()
    
    print("=" * 60)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("\n–ò–∑–º–µ–Ω–µ–Ω–∏—è:")
    print("1. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞")
    print("2. ‚úÖ AoE –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç –µ–¥–∏–Ω—ã–π –±—Ä–æ—Å–æ–∫ —É—Ä–æ–Ω–∞")
    print("3. ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Å–ø–∞—Å–±—Ä–æ—Å–∫–æ–≤ –¥–ª—è AoE –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π")
    print("4. ‚úÖ –ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è –±–µ–∑ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞ —Ç—Ä–µ–±—É—é—Ç –±—Ä–æ—Å–∫–∞ –∞—Ç–∞–∫–∏")

if __name__ == "__main__":
    main()
