#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–æ–ª–±—Ü–∞ saving_throw –≤ —Ç–∞–±–ª–∏—Ü—É spells
–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –µ–≥–æ –¥–ª—è –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π, —Ç—Ä–µ–±—É—é—â–∏—Ö —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞
"""

import logging
from database import DatabaseManager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def add_saving_throw_column():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç–æ–ª–±–µ—Ü saving_throw –≤ —Ç–∞–±–ª–∏—Ü—É spells"""
    
    db = DatabaseManager()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db.connect()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å—Ç–æ–ª–±–µ—Ü
        columns = db.execute_query("""
            SELECT COLUMN_NAME 
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = 'dnd_bot' 
            AND TABLE_NAME = 'spells' 
            AND COLUMN_NAME = 'saving_throw'
        """)
        
        if columns:
            logger.info("–°—Ç–æ–ª–±–µ—Ü saving_throw —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ spells")
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü saving_throw
            logger.info("–î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü saving_throw –≤ —Ç–∞–±–ª–∏—Ü—É spells...")
            db.execute_query("""
                ALTER TABLE spells 
                ADD COLUMN saving_throw VARCHAR(20) DEFAULT NULL
                COMMENT '–¢–∏–ø —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞: –°–∏–ª–∞, –õ–æ–≤–∫–æ—Å—Ç—å, –¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ, –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç, –ú—É–¥—Ä–æ—Å—Ç—å, –•–∞—Ä–∏–∑–º–∞'
            """)
            logger.info("–°—Ç–æ–ª–±–µ—Ü saving_throw —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞—Ö
        update_saving_throws(db)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        verify_saving_throws(db)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–æ–ª–±—Ü–∞: {e}")
        return False
    
    finally:
        db.disconnect()
    
    return True

def update_saving_throws(db):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞—Ö –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π"""
    
    logger.info("–û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞—Ö –¥–ª—è –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π...")
    
    # –°–ª–æ–≤–∞—Ä—å —Å –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è–º–∏ –∏ –∏—Ö —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏
    # –§–æ—Ä–º–∞—Ç: (–Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è, —Ç–∏–ø —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞)
    spell_saving_throws = [
        # –ó–∞–≥–æ–≤–æ—Ä—ã
        ("–°–≤—è—â–µ–Ω–Ω–æ–µ –ø–ª–∞–º—è", "–õ–æ–≤–∫–æ—Å—Ç—å"),
        ("–°–≥–ª–∞–∑", "–ú—É–¥—Ä–æ—Å—Ç—å"),
        
        # 1 —É—Ä–æ–≤–µ–Ω—å
        ("–ñ–≥—É—á–∏–µ —Ä—É–∫–∏", "–õ–æ–≤–∫–æ—Å—Ç—å"),
        ("–ì—Ä–æ–º–æ–≤–∞—è –≤–æ–ª–Ω–∞", "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ"),
        ("–°–æ–Ω", "–ú—É–¥—Ä–æ—Å—Ç—å"),
        
        # 2 —É—Ä–æ–≤–µ–Ω—å
        ("–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä", "–õ–æ–≤–∫–æ—Å—Ç—å"),
        
        # 3 —É—Ä–æ–≤–µ–Ω—å
        ("–ú–æ–ª–Ω–∏—è", "–õ–æ–≤–∫–æ—Å—Ç—å"),
    ]
    
    updated_count = 0
    
    for spell_name, saving_throw in spell_saving_throws:
        result = db.execute_query("""
            UPDATE spells 
            SET saving_throw = %s 
            WHERE name = %s
        """, (saving_throw, spell_name))
        
        if result:
            logger.info(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ '{spell_name}' - —Å–ø–∞—Å–±—Ä–æ—Å–æ–∫: {saving_throw}")
            updated_count += 1
    
    logger.info(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞—Ö")
    
    # –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–æ–≤—ã–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è —Å —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    new_spells_with_saves = [
        # –ó–∞–≥–æ–≤–æ—Ä—ã —Å —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏
        (0, "–ë—Ä—ã–∑–≥–∏ —è–¥–∞", "1d12", "—è–¥", "–Ø–¥–æ–≤–∏—Ç–∞—è –∞—Ç–∞–∫–∞ –ø–æ –æ–¥–Ω–æ–π —Ü–µ–ª–∏", True, False, 
         '["–ß–∞—Ä–æ–¥–µ–π", "–í–æ–ª—à–µ–±–Ω–∏–∫"]', "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ"),
        (0, "–ü–æ—Ä—ã–≤ –≥—Ä–æ–º–∞", "1d6", "–≥—Ä–æ–º–æ–≤–æ–π", "–û—Ç—Ç–∞–ª–∫–∏–≤–∞–µ—Ç –≤—Ä–∞–≥–∞ –≥—Ä–æ–º–æ–º", True, False,
         '["–ë–∞—Ä–¥", "–î—Ä—É–∏–¥", "–ß–∞—Ä–æ–¥–µ–π", "–í–æ–ª—à–µ–±–Ω–∏–∫"]', "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ"),
        
        # 1 —É—Ä–æ–≤–µ–Ω—å
        (1, "–û—á–∞—Ä–æ–≤–∞–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏", None, None, "–û—á–∞—Ä–æ–≤—ã–≤–∞–µ—Ç –≥—É–º–∞–Ω–æ–∏–¥–∞", False, False,
         '["–ë–∞—Ä–¥", "–î—Ä—É–∏–¥", "–ß–∞—Ä–æ–¥–µ–π", "–ö–æ–ª–¥—É–Ω", "–í–æ–ª—à–µ–±–Ω–∏–∫"]', "–ú—É–¥—Ä–æ—Å—Ç—å"),
        (1, "–û–≥–Ω–µ–Ω–Ω–∞—è —Å—Ç—Ä—É—è", "1d6", "–æ–≥–æ–Ω—å", "–õ–∏–Ω–∏—è –æ–≥–Ω—è –¥–ª–∏–Ω–æ–π 15 —Ñ—É—Ç–æ–≤", True, True,
         '["–ß–∞—Ä–æ–¥–µ–π", "–í–æ–ª—à–µ–±–Ω–∏–∫"]', "–õ–æ–≤–∫–æ—Å—Ç—å"),
        (1, "–¢—É–º–∞–Ω–Ω–æ–µ –æ–±–ª–∞–∫–æ", None, None, "–°–æ–∑–¥–∞–µ—Ç –æ–±–ª–∞—Å—Ç—å —Ç—É–º–∞–Ω–∞", False, True,
         '["–î—Ä—É–∏–¥", "–°–ª–µ–¥–æ–ø—ã—Ç", "–ß–∞—Ä–æ–¥–µ–π", "–í–æ–ª—à–µ–±–Ω–∏–∫"]', None),
        
        # 2 —É—Ä–æ–≤–µ–Ω—å  
        (2, "–£–¥–µ—Ä–∂–∞–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏", None, None, "–ü–∞—Ä–∞–ª–∏–∑—É–µ—Ç –≥—É–º–∞–Ω–æ–∏–¥–∞", False, False,
         '["–ë–∞—Ä–¥", "–ñ—Ä–µ—Ü", "–î—Ä—É–∏–¥", "–ß–∞—Ä–æ–¥–µ–π", "–ö–æ–ª–¥—É–Ω", "–í–æ–ª—à–µ–±–Ω–∏–∫"]', "–ú—É–¥—Ä–æ—Å—Ç—å"),
        (2, "–†–∞—Å–∫–∞–ª–µ–Ω–Ω—ã–π –º–µ—Ç–∞–ª–ª", "2d8", "–æ–≥–æ–Ω—å", "–ù–∞–≥—Ä–µ–≤–∞–µ—Ç –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –ø—Ä–µ–¥–º–µ—Ç", True, False,
         '["–ë–∞—Ä–¥", "–î—Ä—É–∏–¥"]', "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ"),
        (2, "–û–ø—É—Ç—ã–≤–∞–Ω–∏–µ", None, None, "–£–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ –Ω–∞ –º–µ—Å—Ç–µ", False, False,
         '["–î—Ä—É–∏–¥", "–°–ª–µ–¥–æ–ø—ã—Ç"]', "–°–∏–ª–∞"),
        
        # 3 —É—Ä–æ–≤–µ–Ω—å
        (3, "–ö–æ–Ω—Ç—Ä–∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ", None, None, "–û—Ç–º–µ–Ω—è–µ—Ç –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞", False, False,
         '["–ß–∞—Ä–æ–¥–µ–π", "–ö–æ–ª–¥—É–Ω", "–í–æ–ª—à–µ–±–Ω–∏–∫"]', None),
        (3, "–°—Ç—Ä–∞—Ö", None, None, "–ü—É–≥–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤ –≤ –∫–æ–Ω—É—Å–µ", False, True,
         '["–ë–∞—Ä–¥", "–ß–∞—Ä–æ–¥–µ–π", "–ö–æ–ª–¥—É–Ω", "–í–æ–ª—à–µ–±–Ω–∏–∫"]', "–ú—É–¥—Ä–æ—Å—Ç—å"),
        (3, "–ó–∞–º–µ–¥–ª–µ–Ω–∏–µ", None, None, "–ó–∞–º–µ–¥–ª—è–µ—Ç –¥–æ 6 —Å—É—â–µ—Å—Ç–≤", False, True,
         '["–ß–∞—Ä–æ–¥–µ–π", "–í–æ–ª—à–µ–±–Ω–∏–∫"]', "–ú—É–¥—Ä–æ—Å—Ç—å"),
    ]
    
    logger.info("–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è —Å —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏...")
    
    for spell_data in new_spells_with_saves:
        level, name, damage, damage_type, description, is_combat, is_area, classes, saving_throw = spell_data
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ
        existing = db.execute_query("SELECT id FROM spells WHERE name = %s", (name,))
        
        if not existing:
            db.execute_query("""
                INSERT INTO spells 
                (level, name, damage, damage_type, description, is_combat, is_area_of_effect, available_classes, saving_throw)
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
            """, (level, name, damage, damage_type, description, is_combat, is_area, classes, saving_throw))
            
            logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ: {name} (—Å–ø–∞—Å–±—Ä–æ—Å–æ–∫: {saving_throw if saving_throw else '–Ω–µ—Ç'})")

def verify_saving_throws(db):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∏ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã"""
    
    logger.info("\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–ø–∞—Å–±—Ä–æ—Å–∫–æ–≤...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è —Å–æ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏
    spells_with_saves = db.execute_query("""
        SELECT name, level, saving_throw, is_combat, is_area_of_effect
        FROM spells 
        WHERE saving_throw IS NOT NULL
        ORDER BY level, name
    """)
    
    if spells_with_saves:
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(spells_with_saves)} –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π —Å–æ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏:")
        
        current_level = -1
        for spell in spells_with_saves:
            if spell['level'] != current_level:
                current_level = spell['level']
                level_name = "–ó–∞–≥–æ–≤–æ—Ä—ã" if current_level == 0 else f"{current_level} —É—Ä–æ–≤–µ–Ω—å"
                logger.info(f"\n{level_name}:")
            
            combat_flag = "‚öîÔ∏è" if spell['is_combat'] else ""
            aoe_flag = "üí•" if spell['is_area_of_effect'] else ""
            logger.info(f"  - {spell['name']}: {spell['saving_throw']} {combat_flag}{aoe_flag}")
    else:
        logger.warning("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π —Å–æ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_spells = db.execute_query("SELECT COUNT(*) as count FROM spells")[0]['count']
    combat_spells = db.execute_query("SELECT COUNT(*) as count FROM spells WHERE is_combat = TRUE")[0]['count']
    spells_with_saves_count = len(spells_with_saves) if spells_with_saves else 0
    
    logger.info(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    logger.info(f"  –í—Å–µ–≥–æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π: {total_spells}")
    logger.info(f"  –ë–æ–µ–≤—ã—Ö –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π: {combat_spells}")
    logger.info(f"  –ó–∞–∫–ª–∏–Ω–∞–Ω–∏–π —Å–æ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º–∏: {spells_with_saves_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º —Å–ø–∞—Å–±—Ä–æ—Å–∫–æ–≤
    save_types = db.execute_query("""
        SELECT saving_throw, COUNT(*) as count
        FROM spells
        WHERE saving_throw IS NOT NULL
        GROUP BY saving_throw
        ORDER BY count DESC
    """)
    
    if save_types:
        logger.info(f"\nüìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º —Å–ø–∞—Å–±—Ä–æ—Å–∫–æ–≤:")
        for save_type in save_types:
            logger.info(f"  {save_type['saving_throw']}: {save_type['count']} –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    logger.info("=" * 60)
    logger.info("–ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ saving_throw –≤ —Ç–∞–±–ª–∏—Ü—É spells")
    logger.info("=" * 60)
    
    if add_saving_throw_column():
        logger.info("\n‚úÖ –°—Ç–æ–ª–±–µ—Ü saving_throw —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω!")
    else:
        logger.error("\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–æ–ª–±—Ü–∞")
        return 1
    
    return 0

if __name__ == "__main__":
    exit(main())
