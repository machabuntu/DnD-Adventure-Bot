#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
"""

import mysql.connector
import logging
from config import DB_HOST, DB_USER, DB_PASSWORD, DB_NAME

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('create_achievements.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

def connect_to_db():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    return mysql.connector.connect(
        host=DB_HOST,
        user=DB_USER,
        password=DB_PASSWORD,
        database=DB_NAME,
        charset='utf8mb4',
        collation='utf8mb4_unicode_ci'
    )

def create_achievements_tables(cursor):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π."""
    
    # –¢–∞–±–ª–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS achievements (
            id INT AUTO_INCREMENT PRIMARY KEY,
            code VARCHAR(100) UNIQUE NOT NULL COMMENT '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
            name VARCHAR(200) NOT NULL COMMENT '–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
            description TEXT COMMENT '–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
            points INT NOT NULL DEFAULT 10 COMMENT '–û—á–∫–∏ –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ',
            category VARCHAR(50) COMMENT '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
            icon VARCHAR(10) DEFAULT 'üèÜ' COMMENT '–≠–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∞',
            is_hidden BOOLEAN DEFAULT FALSE COMMENT '–°–∫—Ä—ã—Ç–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ',
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        ) COMMENT='–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π'
    """)
    logger.info("–°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ achievements")
    
    # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS user_achievements (
            id INT AUTO_INCREMENT PRIMARY KEY,
            user_id BIGINT NOT NULL COMMENT 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram',
            achievement_id INT NOT NULL,
            achieved_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            character_name VARCHAR(100) COMMENT '–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏',
            details TEXT COMMENT '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è',
            FOREIGN KEY (achievement_id) REFERENCES achievements(id) ON DELETE CASCADE,
            UNIQUE KEY unique_user_achievement (user_id, achievement_id),
            INDEX idx_user_id (user_id),
            INDEX idx_achieved_at (achieved_at)
        ) COMMENT='–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    """)
    logger.info("–°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ user_achievements")
    
    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS achievement_progress (
            id INT AUTO_INCREMENT PRIMARY KEY,
            user_id BIGINT NOT NULL,
            achievement_code VARCHAR(100) NOT NULL,
            progress INT DEFAULT 0,
            target INT DEFAULT 1,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
            UNIQUE KEY unique_user_progress (user_id, achievement_code),
            INDEX idx_user_progress (user_id)
        ) COMMENT='–ü—Ä–æ–≥—Ä–µ—Å—Å –∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º'
    """)
    logger.info("–°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ achievement_progress")

def populate_achievements(cursor):
    """–ó–∞–ø–æ–ª–Ω—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏."""
    
    achievements_data = [
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —É—Ä–æ–≤–Ω–∏ (20 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π)
        ('level_2', '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 2-–≥–æ —É—Ä–æ–≤–Ω—è', 10, 'levels', 'üìà', False),
        ('level_3', '–ù–∞—á–∏–Ω–∞—é—â–∏–π –∏—Å–∫–∞—Ç–µ–ª—å', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 3-–≥–æ —É—Ä–æ–≤–Ω—è', 15, 'levels', 'üìà', False),
        ('level_4', '–û–ø—ã—Ç–Ω—ã–π –ø—É—Ç–Ω–∏–∫', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 4-–≥–æ —É—Ä–æ–≤–Ω—è', 20, 'levels', 'üìà', False),
        ('level_5', '–ó–∞–∫–∞–ª–µ–Ω–Ω—ã–π –≤–æ–∏–Ω', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 5-–≥–æ —É—Ä–æ–≤–Ω—è', 30, 'levels', '‚≠ê', False),
        ('level_6', '–í–µ—Ç–µ—Ä–∞–Ω –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 6-–≥–æ —É—Ä–æ–≤–Ω—è', 35, 'levels', '‚≠ê', False),
        ('level_7', '–ì–µ—Ä–æ–π —Ç–∞–≤–µ—Ä–Ω', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 7-–≥–æ —É—Ä–æ–≤–Ω—è', 40, 'levels', '‚≠ê', False),
        ('level_8', '–ì—Ä–æ–∑–∞ –ø–æ–¥–∑–µ–º–µ–ª–∏–π', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 8-–≥–æ —É—Ä–æ–≤–Ω—è', 45, 'levels', 'üåü', False),
        ('level_9', '–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–∞ –∏ –º–∞–≥–∏–∏', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 9-–≥–æ —É—Ä–æ–≤–Ω—è', 50, 'levels', 'üåü', False),
        ('level_10', '–õ–µ–≥–µ–Ω–¥–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 10-–≥–æ —É—Ä–æ–≤–Ω—è', 60, 'levels', '‚ú®', False),
        ('level_11', '–ó–∞ –≥—Ä–∞–Ω—å—é –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 11-–≥–æ —É—Ä–æ–≤–Ω—è', 70, 'levels', '‚ú®', False),
        ('level_12', '–ò–∑–±—Ä–∞–Ω–Ω—ã–π —Å—É–¥—å–±–æ–π', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 12-–≥–æ —É—Ä–æ–≤–Ω—è', 80, 'levels', 'üí´', False),
        ('level_13', '–ú–∏—Ñ–∏—á–µ—Å–∫–∏–π –≥–µ—Ä–æ–π', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 13-–≥–æ —É—Ä–æ–≤–Ω—è', 90, 'levels', 'üí´', False),
        ('level_14', '–°–∏–ª–∞ —Å—Ç–∏—Ö–∏–π', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 14-–≥–æ —É—Ä–æ–≤–Ω—è', 100, 'levels', 'üå†', False),
        ('level_15', '–ü–æ–ª—É–±–æ–≥', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 15-–≥–æ —É—Ä–æ–≤–Ω—è', 120, 'levels', 'üå†', False),
        ('level_16', '–í–æ–ø–ª–æ—â–µ–Ω–∏–µ —Å–∏–ª—ã', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 16-–≥–æ —É—Ä–æ–≤–Ω—è', 140, 'levels', '‚ö°', False),
        ('level_17', '–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –º–∏—Ä–æ–≤', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 17-–≥–æ —É—Ä–æ–≤–Ω—è', 160, 'levels', '‚ö°', False),
        ('level_18', '–ü–æ–∫–æ—Ä–∏—Ç–µ–ª—å —Å—É–¥—å–±—ã', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 18-–≥–æ —É—Ä–æ–≤–Ω—è', 180, 'levels', 'üî•', False),
        ('level_19', '–ù–∞ –ø–æ—Ä–æ–≥–µ –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å 19-–≥–æ —É—Ä–æ–≤–Ω—è', 200, 'levels', 'üî•', False),
        ('level_20', '–ñ–∏–≤–∞—è –ª–µ–≥–µ–Ω–¥–∞', '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ 20-–≥–æ —É—Ä–æ–≤–Ω—è', 250, 'levels', 'üëë', False),
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —É—Ä–æ–Ω
        ('damage_30', '–°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–π —É–¥–∞—Ä', '–ù–∞–Ω–µ—Å—Ç–∏ 30+ —É—Ä–æ–Ω–∞ –æ–¥–Ω–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º', 25, 'combat', 'üí•', False),
        ('damage_50', '–ò—Å–ø–µ–ø–µ–ª—è—é—â–∞—è –º–æ—â—å', '–ù–∞–Ω–µ—Å—Ç–∏ 50+ —É—Ä–æ–Ω–∞ –æ–¥–Ω–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º', 50, 'combat', 'üî•', False),
        ('damage_100', '–ê–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å –≤ –º–∏–Ω–∏–∞—Ç—é—Ä–µ', '–ù–∞–Ω–µ—Å—Ç–∏ 100+ —É—Ä–æ–Ω–∞ –æ–¥–Ω–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º', 100, 'combat', '‚òÑÔ∏è', True),
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –º–∞—Å—Å–æ–≤—ã–µ —É–±–∏–π—Å—Ç–≤–∞
        ('multikill_3', '–¢—Ä–æ–π–Ω–æ–µ —É–±–∏–π—Å—Ç–≤–æ', '–£–±–∏—Ç—å 3 –≤—Ä–∞–≥–æ–≤ –æ–¥–Ω–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º', 40, 'combat', '‚öîÔ∏è', False),
        ('multikill_5', '–ü–µ–Ω—Ç–∞–∫–∏–ª–ª', '–£–±–∏—Ç—å 5 –≤—Ä–∞–≥–æ–≤ –æ–¥–Ω–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º', 80, 'combat', 'üó°Ô∏è', True),
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        ('max_strength', '–°–∏–ª–∞ —Ç–∏—Ç–∞–Ω–∞', '–î–æ–≤–µ—Å—Ç–∏ –°–∏–ª—É –¥–æ 20', 50, 'stats', 'üí™', False),
        ('max_dexterity', '–ì—Ä–∞—Ü–∏—è –∫–æ—à–∫–∏', '–î–æ–≤–µ—Å—Ç–∏ –õ–æ–≤–∫–æ—Å—Ç—å –¥–æ 20', 50, 'stats', 'üèÉ', False),
        ('max_constitution', '–ù–µ—Å–æ–∫—Ä—É—à–∏–º—ã–π', '–î–æ–≤–µ—Å—Ç–∏ –¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ –¥–æ 20', 50, 'stats', 'üõ°Ô∏è', False),
        ('max_intelligence', '–ì–µ–Ω–∏–π', '–î–æ–≤–µ—Å—Ç–∏ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–æ 20', 50, 'stats', 'üß†', False),
        ('max_wisdom', '–ú—É–¥—Ä–µ—Ü', '–î–æ–≤–µ—Å—Ç–∏ –ú—É–¥—Ä–æ—Å—Ç—å –¥–æ 20', 50, 'stats', 'ü¶â', False),
        ('max_charisma', '–•–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω—ã–π –ª–∏–¥–µ—Ä', '–î–æ–≤–µ—Å—Ç–∏ –•–∞—Ä–∏–∑–º—É –¥–æ 20', 50, 'stats', 'üëë', False),
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∑–∞ —Å–º–µ—Ä—Ç—å
        ('character_death', '–ì–µ—Ä–æ–∏—á–µ—Å–∫–∞—è —Å–º–µ—Ä—Ç—å', '–ü–æ–≥–∏–±–Ω—É—Ç—å –≤ –±–æ—é', 25, 'special', 'üíÄ', False),
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∑–∞ –±—Ä–æ–Ω—é
        ('armor_class_20', '–ù–µ–ø—Ä–∏—Å—Ç—É–ø–Ω–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å', '–ò–º–µ—Ç—å –∫–ª–∞—Å—Å –¥–æ—Å–ø–µ—Ö–æ–≤ 20 –∏–ª–∏ –≤—ã—à–µ', 40, 'defense', 'üè∞', False),
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –Ω–∏–∑–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        ('dump_strength', '–•–∏–ª—ã–π', '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –°–∏–ª–æ–π –Ω–∏–∂–µ 5', 15, 'funny', 'ü¶¥', True),
        ('dump_dexterity', '–ù–µ—É–∫–ª—é–∂–∏–π', '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –õ–æ–≤–∫–æ—Å—Ç—å—é –Ω–∏–∂–µ 5', 15, 'funny', 'ü¶•', True),
        ('dump_constitution', '–•—Ä—É–ø–∫–∏–π', '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∏–∂–µ 5', 15, 'funny', 'üçÉ', True),
        ('dump_intelligence', '–ü—Ä–æ—Å—Ç–æ–¥—É—à–Ω—ã–π', '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º –Ω–∏–∂–µ 5', 15, 'funny', 'ü™®', True),
        ('dump_wisdom', '–ù–∞–∏–≤–Ω—ã–π', '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –ú—É–¥—Ä–æ—Å—Ç—å—é –Ω–∏–∂–µ 5', 15, 'funny', 'üôà', True),
        ('dump_charisma', '–û—Ç—Ç–∞–ª–∫–∏–≤–∞—é—â–∏–π', '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –•–∞—Ä–∏–∑–º–æ–π –Ω–∏–∂–µ 5', 15, 'funny', 'ü¶®', True),
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        ('first_character', '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!', '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞', 5, 'special', 'üëã', False),
        ('first_kill', '–ü–µ—Ä–≤–∞—è –∫—Ä–æ–≤—å', '–£–±–∏—Ç—å –ø–µ—Ä–≤–æ–≥–æ –≤—Ä–∞–≥–∞', 10, 'combat', 'üó°Ô∏è', False),
        ('first_spell', '–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–≤–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ', 10, 'magic', '‚ú®', False),
        ('critical_hit', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Å–ø–µ—Ö!', '–ù–∞–Ω–µ—Å—Ç–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä', 15, 'combat', 'üéØ', False),
        ('critical_miss', '–≠–ø–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≤–∞–ª', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–º–∞—Ö–Ω—É—Ç—å—Å—è', 10, 'funny', 'üòÖ', True),
        ('survivor', '–í—ã–∂–∏–≤—à–∏–π', '–í—ã–∂–∏—Ç—å —Å 1 HP', 30, 'special', 'üçÄ', True),
        ('glass_cannon', '–°—Ç–µ–∫–ª—è–Ω–Ω–∞—è –ø—É—à–∫–∞', '–ò–º–µ—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –∞—Ç–∞–∫—É –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∑–∞—â–∏—Ç—É', 25, 'funny', 'üíé', True),
        ('tank', '–ñ–∏–≤–æ–π —â–∏—Ç', '–ü–æ–ª—É—á–∏—Ç—å 100+ —É—Ä–æ–Ω–∞ –∑–∞ –æ–¥–Ω–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –∏ –≤—ã–∂–∏—Ç—å', 35, 'defense', 'üõ°Ô∏è', True),
        ('pacifist', '–ü–∞—Ü–∏—Ñ–∏—Å—Ç', '–ó–∞–≤–µ—Ä—à–∏—Ç—å –±–æ–π –±–µ–∑ –Ω–∞–Ω–µ—Å–µ–Ω–∏—è —É—Ä–æ–Ω–∞', 30, 'special', '‚òÆÔ∏è', True),
        ('speedrun', '–°–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –∑–∞–±–µ–≥', '–ü–æ–±–µ–¥–∏—Ç—å –≤—Ä–∞–≥–∞ –∑–∞ –æ–¥–∏–Ω —Ö–æ–¥', 20, 'combat', '‚ö°', False),
        ('unlucky', '–ù–µ–≤–µ–∑—É—á–∏–π', '–í—ã–±—Ä–æ—Å–∏—Ç—å 1 –Ω–∞ d20 —Ç—Ä–∏ —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥', 25, 'funny', 'üé≤', True),
        ('lucky', '–í–µ–∑—É–Ω—á–∏–∫', '–í—ã–±—Ä–æ—Å–∏—Ç—å 20 –Ω–∞ d20 —Ç—Ä–∏ —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥', 50, 'special', 'üçÄ', True),
    ]
    
    insert_query = """
        INSERT INTO achievements (code, name, description, points, category, icon, is_hidden)
        VALUES (%s, %s, %s, %s, %s, %s, %s)
        ON DUPLICATE KEY UPDATE
            name = VALUES(name),
            description = VALUES(description),
            points = VALUES(points),
            category = VALUES(category),
            icon = VALUES(icon),
            is_hidden = VALUES(is_hidden)
    """
    
    cursor.executemany(insert_query, achievements_data)
    logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω–æ {len(achievements_data)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    conn = None
    cursor = None
    
    try:
        logger.info("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = connect_to_db()
        cursor = conn.cursor()
        
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...")
        create_achievements_tables(cursor)
        conn.commit()
        
        logger.info("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏...")
        populate_achievements(cursor)
        conn.commit()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        cursor.execute("SELECT COUNT(*) FROM achievements")
        count = cursor.fetchone()[0]
        logger.info(f"–í—Å–µ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ: {count}")
        
        cursor.execute("SELECT category, COUNT(*) as cnt FROM achievements GROUP BY category")
        for category, cnt in cursor.fetchall():
            logger.info(f"  –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category}': {cnt} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π")
        
        logger.info("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
        
    except Exception as e:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        if conn:
            conn.rollback()
        raise
    finally:
        if cursor:
            cursor.close()
        if conn:
            conn.close()

if __name__ == "__main__":
    main()
